import static org.junit.Assert.*;

import org.junit.Test;


public class TestMagicSquare {

	@Test
	public void test() {
				
		int[][] a1 = {{8,	1,	6},
			{3,	5,	7},
			{4,	9,	2}};

		int[][] b1 = {{1,	8,	6},
				{3,	5,	7},
				{4,	9,	2}};
		
		int[][] a2 = 	{{17,	24,	1,	8,	15},
			{23,	5,	7,	14,	16},
			{4,	6,	13,	20,	22},
			{10,	12,	19,	21,	3},
			{11,	18,	25,	2,	9}};

		int[][] b2 = 	{{17,	24,	1,	8,	15},
				{23,	5,	20,	14,	16},
				{4,	6,	13,	7,	22},
				{10,	12,	19,	21,	3},
				{11,	18,	25,	2,	9}};
		
		
		int[][] a3 = 	{{30,	39,	48,	1,	10,	19,	28},
			{38,	47,	7,	9,	18,	27,	29},
			{46,	6,	8,	17,	26,	35,	37},
			{5,	14,	16,	25,	34,	36,	45},
			{13,	15,	24,	33,	42,	44,	4},
			{21,	23,	32,	41,	43,	3,	12},
			{22,	31,	40,	49,	2,	11,	20}};

		int[][] b3 = 	{
				{0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0}
		};

		
		int[][] a4 = 	{{47,	58,	69,	80,	1,	12,	23,	34,	45},
			{57,	68,	79,	9,	11,	22,	33,	44,	46},
			{67,	78,	8,	10,	21,	32,	43,	54,	56},
			{77,	7,	18,	20,	31,	42,	53,	55,	66},
			{6,	17,	19,	30,	41,	52,	63,	65,	76},
			{16,	27,	29,	40,	51,	62,	64,	75,	5},
			{26,	28,	39,	50,	61,	72,	74,	4,	15},
			{36,	38,	49,	60,	71,	73,	3,	14,	25},
			{37,	48,	59,	70,	81,	2,	13,	24,	35}};

		int[][] b4 = 	{{47,	58,	69,	80,	1,	12,	23,	34,	45},
				{57,	68,	79,	9,	11,	22,	33,	44,	46},
				{67,	78,	8,	10,	21,	32,	43,	54,	56},
				{77,	7,	18,	20,	31,	42,	53,	55,	66},
				{6,	17,	19,	30,	41,	52,	63,	65,	76},
				{16,	27,	29,	40,	51,	62,	64,	75,	5},
				{26,	29,	39,	50,	61,	72,	74,	4,	15},
				{36,	38,	49,	60,	71,	73,	3,	14,	25},
				{37,	48,	59,	70,	81,	2,	13,	24,	35}};

		
		int[][] a5 = {{122,	139,	156,	173,	190,	207,	224,	1,	18,	35,	52,	69,	86,	103,	120},
			{138,	155,	172,	189,	206,	223,	15,	17,	34,	51,	68,	85,	102,	119,	121},
			{154,	171,	188,	205,	222,	14,	16,	33,	50,	67,	84,	101,	118,	135,	137},
			{170,	187,	204,	221,	13,	30,	32,	49,	66,	83,	100,	117,	134,	136,	153},
			{186,	203,	220,	12,	29,	31,	48,	65,	82,	99,	116,	133,	150,	152,	169},
			{202,	219,	11,	28,	45,	47,	64,	81,	98,	115,	132,	149,	151,	168,	185},
			{218,	10,	27,	44,	46,	63,	80,	97,	114,	131,	148,	165,	167,	184,	201},
			{9,	26,	43,	60,	62,	79,	96,	113,	130,	147,	164,	166,	183,	200,	217},
			{25,	42,	59,	61,	78,	95,	112,	129,	146,	163,	180,	182,	199,	216,	8},
			{41,	58,	75,	77,	94,	111,	128,	145,	162,	179,	181,	198,	215,	7,	24},
			{57,	74,	76,	93,	110,	127,	144,	161,	178,	195,	197,	214,	6,	23,	40},
			{73,	90,	92,	109,	126,	143,	160,	177,	194,	196,	213,	5,	22,	39,	56},
			{89,	91,	108,	125,	142,	159,	176,	193,	210,	212,	4,	21,	38,	55,	72},
			{105,	107,	124,	141,	158,	175,	192,	209,	211,	3,	20,	37,	54,	71,	88},
			{106,	123,	140,	157,	174,	191,	208,	225,	2,	19,	36,	53,	70,	87,	104}};

		int[][] b5 = {{122,	139,	156,	173,	190,	207,	224,	1,	18,	35,	52,	69,	86,	103,	120},
				{138,	155,	172,	189,	206,	223,	15,	17,	34,	51,	68,	85,	102,	119,	121},
				{154,	171,	188,	205,	222,	14,	16,	33,	50,	67,	84,	101,	118,	135,	137},
				{170,	187,	204,	221,	13,	30,	32,	49,	66,	83,	100,	117,	134,	136,	153},
				{186,	203,	220,	12,	29,	31,	48,	65,	82,	99,	116,	133,	150,	152,	169},
				{202,	219,	11,	28,	45,	47,	64,	81,	98,	115,	132,	149,	151,	168,	185},
				{218,	10,	27,	44,	46,	63,	80,	97,	114,	131,	148,	165,	167,	184,	201},
				{9,	26,	43,	60,	62,	79,	96,	113,	130,	147,	164,	166,	183,	200,	217},
				{25,	42,	59,	61,	78,	95,	112,	129,	146,	163,	180,	182,	199,	216,	8},
				{41,	58,	75,	77,	94,	111,	128,	145,	162,	179,	181,	198,	215,	7,	24},
				{57,	74,	76,	93,	1110,	127,	144,	161,	178,	195,	197,	214,	6,	23,	40},
				{73,	90,	92,	109,	126,	143,	160,	177,	194,	196,	213,	5,	22,	39,	56},
				{89,	91,	108,	125,	142,	159,	176,	193,	210,	212,	4,	21,	38,	55,	72},
				{105,	107,	124,	141,	158,	175,	192,	209,	211,	3,	20,	37,	54,	71,	88},
				{106,	123,	140,	157,	174,	191,	208,	225,	2,	19,	36,	53,	70,	87,	104}};
		
		if (MagicSquare.isMagic(a1) != true)
			fail("test pre tuto maticu nepresiel: \n"+printM(a1));
		if (MagicSquare.isMagic(a2) != true)
			fail("test pre tuto maticu nepresiel: \n"+printM(a2));
		if (MagicSquare.isMagic(a3) != true)
			fail("test pre tuto maticu nepresiel: \n"+printM(a3));
		if (MagicSquare.isMagic(a4) != true)
			fail("test pre tuto maticu nepresiel: \n"+printM(a4));
		if (MagicSquare.isMagic(a5) != true)
			fail("test pre tuto maticu nepresiel: \n"+printM(a5));
	
		if (MagicSquare.isMagic(b1) == true)
			fail("test pre tuto maticu nepresiel: \n"+printM(b1));
		if (MagicSquare.isMagic(b2) == true)
			fail("test pre tuto maticu nepresiel: \n"+printM(b2));
		if (MagicSquare.isMagic(b3) == true)
			fail("test pre tuto maticu nepresiel: \n"+printM(b3));
		if (MagicSquare.isMagic(b4) == true)
			fail("test pre tuto maticu nepresiel: \n"+printM(b4));
		if (MagicSquare.isMagic(b5) == true)
			fail("test pre tuto maticu nepresiel: \n"+printM(b5));

	}
	public static String printM(int[][] a) {
		String s ="";
		for(int[]r:a) {
			for(int e:r)
				s += e+", ";
			s += "\n";
		}
		return s;
	}
}

import static org.junit.Assert.*;

import org.junit.Test;


public class TestObrys {

    char[][] m1 = {{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ','#',' ',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#',' ',' '},
            {' ',' ',' ',' ',' ','#',' ','#',' ',' '},
            {' ',' ',' ',' ','#','#','#',' ',' ',' '},
            {' ',' ',' ',' ','#',' ','#',' ',' ',' '},
            {' ',' ',' ',' ',' ','#',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ',' ',' ',' ',' ',' '}};
    
    char[][] m2 = {{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ','#',' ',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#',' ',' '},
            {' ',' ',' ',' ',' ','#',' ','#',' ',' '},
            {' ',' ',' ',' ','#','#','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#','#','#'},
            {' ',' ',' ',' ',' ','#',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ',' ',' ',' ',' ',' '}};

    char[][] m3 = {{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ','#',' ',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#',' ',' '},
            {' ',' ',' ',' ',' ','#',' ','#',' ',' '},
            {' ',' ',' ',' ','#','#','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#','#','#'},
            {' ',' ',' ',' ',' ','#',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ','#','#','#','#','#'}};

    char[][] m4 = {{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ','#',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ','#',' ',' ','#',' ',' ',' '},
            {'#','#','#','#','#',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#',' ',' '},
            {' ',' ',' ',' ',' ','#',' ','#',' ',' '},
            {' ',' ',' ',' ','#','#','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#','#','#'},
            {' ',' ',' ',' ',' ','#',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ','#','#','#','#','#'}};
    
    char[][] m5 = 
 	   {
    		{' ',' ',' '},
        	{' ',' ',' '},
            {'#',' ',' '},
            {' ',' ',' '}
 	   };
    		   
    char[][] x1 = {{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ','#',' ',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#',' ',' '},
            {' ',' ',' ',' ',' ','#',' ','#',' ',' '},
            {' ',' ',' ',' ','#','#','#',' ',' ',' '},
            {' ',' ',' ',' ','#',' ','#',' ',' ',' '},
            {' ',' ',' ',' ',' ','#',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ',' ',' ',' ',' ',' '}};
    
    char[][] x2 = {{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ','#',' ',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#',' ',' '},
            {' ',' ',' ',' ',' ','#',' ','#',' ',' '},
            {' ',' ',' ',' ','#','#','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#','#','#'},
            {' ',' ',' ',' ',' ','#',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ',' ',' ',' ',' ',' '}};

    char[][] x3 = {{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ','#',' ',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#',' ',' '},
            {' ',' ',' ',' ',' ','#',' ','#',' ',' '},
            {' ',' ',' ',' ','#','#','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#','#','#'},
            {' ',' ',' ',' ',' ','#',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ','#','#','#','#','#'}};

    char[][] x4 = {{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ','#',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ','#',' ',' ','#',' ',' ',' '},
            {'#','#','#','#','#',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#',' ',' '},
            {' ',' ',' ',' ',' ','#',' ','#',' ',' '},
            {' ',' ',' ',' ','#','#','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#','#','#'},
            {' ',' ',' ',' ',' ','#',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ','#','#','#','#','#'}};
    
    char[][] x5 = 
 	   {
    		{' ',' ',' '},
        	{' ',' ',' '},
            {'#',' ',' '},
            {' ',' ',' '}
 	   };
    		   
    char[][] y1 = {{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ','#',' ',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#',' ',' '},
            {' ',' ',' ',' ',' ','#',' ','#',' ',' '},
            {' ',' ',' ',' ','#','#','#',' ',' ',' '},
            {' ',' ',' ',' ','#',' ','#',' ',' ',' '},
            {' ',' ',' ',' ',' ','#',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ',' ',' ',' ',' ',' '}};
    
    char[][] y2 = {{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ','#',' ',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#',' ',' '},
            {' ',' ',' ',' ',' ','#',' ','#',' ',' '},
            {' ',' ',' ',' ','#','#','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#','#','#'},
            {' ',' ',' ',' ',' ','#',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ',' ',' ',' ',' ',' '}};

    char[][] y3 = {{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ','#',' ',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#',' ',' '},
            {' ',' ',' ',' ',' ','#',' ','#',' ',' '},
            {' ',' ',' ',' ','#','#','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#','#','#'},
            {' ',' ',' ',' ',' ','#',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ','#','#','#','#','#'}};

    char[][] y4 = {{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ','#',' ',' ',' ',' ',' ',' '},
            {' ',' ',' ','#',' ',' ','#',' ',' ',' '},
            {'#','#','#','#','#',' ','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#',' ',' '},
            {' ',' ',' ',' ',' ','#',' ','#',' ',' '},
            {' ',' ',' ',' ','#','#','#',' ',' ',' '},
            {' ',' ',' ',' ','#','#','#','#','#','#'},
            {' ',' ',' ',' ',' ','#',' ',' ',' ',' '},
            {' ',' ',' ',' ',' ','#','#','#','#','#'}};
    
    char[][] y5 = 
 	   {
    		{' ',' ',' '},
        	{' ',' ',' '},
            {'#',' ',' '},
            {' ',' ',' '}
 	   };

    
	@Test
	public void testObrys8() {
		Obrys.obrys8(m1, '#','@'); myobrys8(x1, '#','@');
		if (!rovnaSa(m1,x1)) fail("nefunguje na matici:\n"+printM(y1));
		
		Obrys.obrys8(m2, '#','@'); myobrys8(x2, '#','@');
		if (!rovnaSa(m2,x2)) fail("nefunguje na matici:\n"+printM(y2));

		Obrys.obrys8(m3, '#','@'); myobrys8(x3, '#','@');
		if (!rovnaSa(m3,x3)) fail("nefunguje na matici:\n"+printM(y3));
		
		Obrys.obrys8(m4, '#','@'); myobrys8(x4, '#','@');
		if (!rovnaSa(m4,x4)) fail("nefunguje na matici:\n"+printM(y4));

		Obrys.obrys8(m5, '#','@'); myobrys8(x5, '#','@');
		if (!rovnaSa(m5,x5)) fail("nefunguje na matici:\n"+printM(y5));
	}

	@Test
	public void testObrys4() {
		Obrys.obrys4(m1, '#','@'); myobrys4(x1, '#','@');
		if (!rovnaSa(m1,x1)) fail("nefunguje na matici:\n"+printM(y1));
		
		Obrys.obrys4(m2, '#','@'); myobrys4(x2, '#','@');
		if (!rovnaSa(m2,x2)) fail("nefunguje na matici:\n"+printM(y2));

		Obrys.obrys4(m3, '#','@'); myobrys4(x3, '#','@');
		if (!rovnaSa(m3,x3)) fail("nefunguje na matici:\n"+printM(y3));
		
		Obrys.obrys4(m4, '#','@'); myobrys4(x4, '#','@');
		if (!rovnaSa(m4,x4)) fail("nefunguje na matici:\n"+printM(y4));

		Obrys.obrys4(m5, '#','@'); myobrys4(x5, '#','@');
		if (!rovnaSa(m5,x5)) fail("nefunguje na matici:\n"+printM(y5));
	}

	public static String printM(char[][] a) {
		String s ="";
		for(char[]r:a) {
			for(char e:r)
				s += e+", ";
			s += "\n";
		}
		return s;
	}

	public static boolean rovnaSa(char[][] m1, char[][] m2) {
		if (m1.length != m2.length)return false;
		for (int i = 0; i<m1.length; i++) {
			if (m1[i].length != m2[i].length)return false;
			for(int j=0; j < m1[i].length; j++)
				if (m1[i][j] != m2[i][j]) return false;
		}
		return true;
	}
	

	  public static void myobrys8(char[][] matica, char hladany, char obrysovy){
	    for (int i = 0; i < matica.length; i++) {
	      for (int j = 0; j < matica[i].length; j++) {
	        if (matica[i][j] != hladany) continue;
	        for (int i2 = -1; i2 < 2; i2++) {
	          for (int j2 = -1; j2 < 2; j2++) {
	            if (i+i2 >= 0 && 
	                i+i2 < matica.length){
	              if (j+j2 >= 0 &&
	                j+j2 < matica[i].length){
	                if (matica[i+i2][j+j2]!=hladany)
	                  matica[i+i2][j+j2] = obrysovy;
	              }
	            }
	          }
	          
	        }
	        
	      }
	      
	    }
	  }
	  
	  public static void myobrys4(char[][] matica, char hladany, char obrysovy){
	    for (int i = 0; i < matica.length; i++) {
	      for (int j = 0; j < matica[i].length; j++) {
	        if (matica[i][j]!=hladany) continue;
	        for (int i2 = -1; i2 < 2; i2++) {
	          if (i+i2 >= 0 &&
	              i+i2 < matica.length){
	            if (matica[i+i2][j]!=hladany)
	              matica[i+i2][j] = obrysovy;
	          }
	        }
	        for (int j2 = -1; j2 < 2; j2++) {
	          if (j+j2 >=0 &&
	              j+j2 < matica[i].length){
	            if(matica[i][j+j2]!=hladany)
	              matica[i][j+j2] = obrysovy;
	          }
	        }
	      }
	    }
	  }
	
}
